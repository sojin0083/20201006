<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="alExam.web.sv.ReqExamMngt">
    
    <select id="reqExamList" resultType="java.util.Map">
        /*
			query id : alExam.web.sv.ReqExamMngt.reqExamList
			description : 검사의뢰리스트 검색
		*/
    	SELECT to_char(to_date(EXAM_REQ_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') as EXAM_REQ_DATE
		 	  ,EXAM_CMP_DATE
			  ,EXAM_SN
			  ,EXAM_NO
		 	  ,R_NUMBER
		 	  ,C_NUMBER
			  ,NAME
		  	  ,FN_GET_SCLAS_NM('CM002', GENDER) AS GENDER
		  	  ,BIRTH
		  	  ,FN_CAL_AGE(R_NUMBER) AS AGE
		  	  ,EXAM_DIV
		 	  ,FN_GET_SCLAS_NM('SV001', EXAM_DIV) AS EXAM_DIV_NM
		  	  ,EXAM_STTUS
		  	  ,FN_GET_SCLAS_NM('SV002', EXAM_STTUS) AS EXAM_STTUS_NM
		  	  ,ORG_CD
		  	  ,EXAM_DIVV
		from(
		  		SELECT T1.EXAM_REQ_DATE
					  ,T1.EXAM_CMP_DATE
					  ,T1.EXAM_NO
					  ,T1.EXAM_SN
					  ,T1.R_NUMBER
					  ,T2.C_NUMBER
					  ,T2.NAME
					  ,T2.GENDER
					  ,T2.BIRTH
					  ,T1.EXAM_DIV
					  ,T1.EXAM_STTUS
		       	  	  ,(SELECT ORG_CD from TN_CM_USER_INFO where USER_ID = T2.REG_DML_ID) AS ORG_CD
		       	  	  ,NVL(T1.EXAM_DIV,'')				AS EXAM_DIVV
				 FROM TN_SV_EXAM_REQ T1
		  	   	 LEFT OUTER JOIN TN_CM_TRGTER_INFO T2
				   ON T1.R_NUMBER = T2.R_NUMBER
		)
		WHERE 1=1
		<if test="SESS_ORG_CD != 'T001'">
			AND ORG_CD = #{SESS_ORG_CD}
		</if>
		<if test="idValue !=null and !''.equals(idValue)">
		    AND (NAME LIKE '%' || #{idValue} || '%' OR C_NUMBER LIKE '%' || #{idValue} || '%')
		</if>
		<if test="examSn !=null and !''.equals(examSn)">
		    AND EXAM_SN = #{examSn}
		</if>
		<if test="gender !=null and !''.equals(gender)">
		    AND GENDER = #{gender}
		</if>
		<if test="ageGroup !=null and !''.equals(ageGroup)">
		    AND floor((FN_CAL_AGE(R_NUMBER)) / 10) * 10 = #{ageGroup}
		</if>
		<if test="examDiv !=null and !''.equals(examDiv)">
			AND EXAM_DIV = #{examDiv}
		</if>
		<if test="examSttus !=null and !''.equals(examSttus)">
			AND EXAM_STTUS = #{examSttus}
		</if>
		<if test="sDate !=null and !''.equals(sDate)">
		    <![CDATA[
		    	AND EXAM_REQ_DATE >= #{sDate}
		    ]]>
		</if>
		<if test="eDate !=null and !''.equals(eDate)">
		    <![CDATA[
		    	AND EXAM_REQ_DATE <= #{eDate}
		    ]]>
		</if>
		ORDER BY EXAM_REQ_DATE DESC, R_NUMBER ASC, EXAM_SN DESC
		
    </select>
    
    
    <select id="trgterInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
        /*
			query id : alExam.web.sv.ReqExamMngt.trgterInfo
			description : 대상자정보
		*/
		SELECT
			 R_NUMBER
			,C_NUMBER
			,NAME
			,to_char(to_date(BIRTH, 'YYYYMMDD'), 'YYYY-MM-DD') as BIRTH
			,FN_CAL_AGE(R_NUMBER) AS AGE
			,DIV_BIRTH
			,GENDER
			,HAND_CD
			,EDU_CD
			,EDU_STTUS
			,EDU_YEAR
			,INMATE_NAME
			,INMATE_YN
			,REG_DML_DT
			,REG_DML_ID
			,LST_DML_DT
		FROM TN_CM_TRGTER_INFO
		WHERE R_NUMBER = #{R_NUMBER}
	</select>
	
    
	<select id="reqExamInfo" resultType="java.util.Map">
	    /*
			query id : alExam.web.sv.ReqExamMngt.trgterInfo
			description : 검사의뢰내역
		*/
	    SELECT 
			 FN_GET_SCLAS_NM('SV002', T1.EXAM_STTUS) AS EXAM_STTUS
			,T1.EXAM_DIV
      		,FN_GET_SCLAS_NM('SV001',T1.EXAM_DIV) EXAM_DIV_NM
			,to_char(to_date(T1.EXAM_REQ_DATE, 'YYYYMMDD'), 'YYYYMMDD') as EXAM_REQ_DATE
			,T1.EXAM_SN
			,T1.ORG_CD
			,(SELECT ORG_NM FROM TC_CM_ORG T2 WHERE T1.ORG_CD = T2.ORG_CD) AS ORG_NM
			,T1.EXAM_REQ_ID
			,(SELECT USER_NM FROM TN_CM_USER_INFO T3 WHERE T1.EXAM_REQ_ID = T3.USER_ID) AS EXAM_REQ_NM
			,T1.EXAM_INS_ID  
			,(SELECT USER_NM FROM TN_CM_USER_INFO T3 WHERE T1.EXAM_INS_ID = T3.USER_ID) AS EXAM_INS_NM
			,T1.MEMO
		FROM TN_SV_EXAM_REQ T1
		WHERE R_NUMBER = #{R_NUMBER}
		AND (T1.EXAM_STTUS = '01' OR T1.EXAM_STTUS = '02')
		
	</select>
    
	
	<select id="ExamRecList" resultType="java.util.Map">
	    /*
			query id : alExam.web.sv.ReqExamMngt.ExamRecList
			description : 검사 결과 리스트
		*/
	    SELECT 
	    	 T1.EXAM_NO	
			,T1.EXAM_DIV
			,to_char(to_date(T1.EXAM_CMP_DATE, 'YYYYMMDD'), 'YYYYMMDD') as EXAM_CMP_DATE
			,T1.EXAM_SN
			,T1.TOT_POINT
			,T2.*
		FROM TN_SV_EXAM_REQ T1
		RIGHT OUTER JOIN(   
			SELECT
				EXAM_NO
				,R_NUMBER
				,SUM(DECODE(EXAM_ITEM_CD, 'L01', POINT)) L01
				,SUM(DECODE(EXAM_ITEM_CD, 'L02', POINT)) L02
				,SUM(DECODE(EXAM_ITEM_CD, 'L03', POINT)) L03
				,SUM(DECODE(EXAM_ITEM_CD, 'L04', POINT)) L04
				,SUM(DECODE(EXAM_ITEM_CD, 'L05', POINT)) L05
				,SUM(DECODE(EXAM_ITEM_CD, 'L06', POINT)) L06
				,SUM(DECODE(EXAM_ITEM_CD, 'L07', POINT)) L07
				,SUM(DECODE(EXAM_ITEM_CD, 'L08', POINT)) L08
				,SUM(DECODE(EXAM_ITEM_CD, 'L09', POINT)) L09
				,SUM(DECODE(EXAM_ITEM_CD, 'L10', POINT)) L10
				,SUM(DECODE(EXAM_ITEM_CD, 'L11', POINT)) L11
				,SUM(DECODE(EXAM_ITEM_CD, 'L12', POINT)) L12
				,SUM(DECODE(EXAM_ITEM_CD, 'L13', POINT)) L13
				,SUM(DECODE(EXAM_ITEM_CD, 'L14', POINT)) L14
				,SUM(DECODE(EXAM_ITEM_CD, 'S01', POINT)) S01
				,SUM(DECODE(EXAM_ITEM_CD, 'S02', POINT)) S02
				,SUM(DECODE(EXAM_ITEM_CD, 'S03', POINT)) S03
				,SUM(DECODE(EXAM_ITEM_CD, 'S04', POINT)) S04
				,SUM(DECODE(EXAM_ITEM_CD, 'S05', POINT)) S05
				,SUM(DECODE(EXAM_ITEM_CD, 'S06', POINT)) S06
				,SUM(DECODE(EXAM_ITEM_CD, 'S07', POINT)) S07
				,SUM(DECODE(EXAM_ITEM_CD, 'S08', POINT)) S08
				,SUM(DECODE(EXAM_ITEM_CD, 'S09', POINT)) S09
				,SUM(DECODE(EXAM_ITEM_CD, 'M01', POINT)) M01
				,SUM(DECODE(EXAM_ITEM_CD, 'M02', POINT)) M02
				,SUM(DECODE(EXAM_ITEM_CD, 'M03', POINT)) M03
				,SUM(DECODE(EXAM_ITEM_CD, 'M04', POINT)) M04
				,SUM(DECODE(EXAM_ITEM_CD, 'M05', POINT)) M05
				,SUM(DECODE(EXAM_ITEM_CD, 'M06', POINT)) M06
				,SUM(DECODE(EXAM_ITEM_CD, 'M07', POINT)) M07
				,SUM(DECODE(EXAM_ITEM_CD, 'M08', POINT)) M08
				,SUM(DECODE(EXAM_ITEM_CD, 'M09', POINT)) M09
				,SUM(DECODE(EXAM_ITEM_CD, 'M10', POINT)) M10
				,SUM(DECODE(EXAM_ITEM_CD, 'M11', POINT)) M11
				,SUM(DECODE(EXAM_ITEM_CD, 'M12', POINT)) M12
				,SUM(DECODE(EXAM_ITEM_CD, 'M13', POINT)) M13
				,SUM(DECODE(EXAM_ITEM_CD, 'M14', POINT)) M14
				,SUM(DECODE(EXAM_ITEM_CD, 'M15', POINT)) M15
				,SUM(DECODE(EXAM_ITEM_CD, 'M16', POINT)) M16
				,SUM(DECODE(EXAM_ITEM_CD, 'M17', POINT)) M17
				,SUM(DECODE(EXAM_ITEM_CD, 'M18', POINT)) M18
				,SUM(DECODE(EXAM_ITEM_CD, 'M19', POINT)) M19
				FROM TN_SV_EXAM_RESULT
			WHERE R_NUMBER = #{R_NUMBER}
			AND (EXAM_ITEM_CD_DTLS,EXAM_ITEM_CD) NOT IN (SELECT DISTINCT EXAM_ITEM_CD_DTLS ,EXAM_ITEM_CD
    								  FROM TN_SV_EXAM_RESULT
     							      WHERE  EXAM_ITEM_CD_DTLS IN('1101','1102','1103','1104','1105','1106','1107','2101','2102','2103','2104','2105','2106','2107')
     								  AND EXAM_ITEM_CD='L05')
			GROUP BY EXAM_NO, R_NUMBER
		)T2
		ON T1.EXAM_NO = T2.EXAM_NO
		ORDER BY TO_NUMBER(T2.EXAM_NO) DESC
	</select>
	
	
	<select id="cntExam" resultType="java.util.Map">
	    /*
			query id : alExam.web.sv.ReqExamMngt.cntExam
			description : 검사 결과 리스트
		*/
		select
		  (select count(EXAM_DIV) from TN_SV_EXAM_REQ t1 where EXAM_DIV = 'L' and EXAM_STTUS = '03' and R_NUMBER = #{R_NUMBER}) AS L
		  ,(select count(EXAM_DIV) from TN_SV_EXAM_REQ t2 where EXAM_DIV = 'S'and EXAM_STTUS = '03' and R_NUMBER = #{R_NUMBER}) AS S
		  ,(select count(EXAM_DIV) from TN_SV_EXAM_REQ t3 where EXAM_DIV = 'M'and EXAM_STTUS = '03' and R_NUMBER = #{R_NUMBER}) AS M
		from dual
	</select>
	
	<delete id="deleteExam">
	    /*
	    	query id : alExam.web.sv.ReqExamMngt.cntExam
	    	description : 검사의뢰 삭제
	    */
	    DELETE	TN_SV_EXAM_REQ
	     WHERE	EXAM_NO		= #{EXAM_NO}
	</delete>
</mapper>